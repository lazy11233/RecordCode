{"remainingRequest":"/Users/liuzhao/Project/re-vue/node_modules/babel-loader/lib/index.js!/Users/liuzhao/Project/re-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuzhao/Project/re-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhao/Project/re-vue/src/components/input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhao/Project/re-vue/src/components/input.vue","mtime":1547192884000},{"path":"/Users/liuzhao/Project/re-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhao/Project/re-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhao/Project/re-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhao/Project/re-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport Emitter from \"../mixins/emitter\";\nexport default {\n  name: \"vInput\",\n  mixins: [Emitter],\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: this.value\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.currentValue = val;\n    }\n  },\n  methods: {\n    handleInput: function handleInput(event) {\n      var value = event.target.value;\n      this.currentValue = value;\n      this.$emit(\"input\", value);\n      this.dispatch(\"iFormItem\", \"on-form-change\", value);\n    },\n    handleBlur: function handleBlur() {\n      this.dispatch(\"iFormItem\", \"on-form-blur\", this.currentValue);\n    }\n  }\n};",{"version":3,"sources":["input.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,OAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAHA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA;AACA,WAAA,YAAA,GAAA,GAAA;AACA;AAHA,GAdA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,WAAA,QAAA,CAAA,WAAA,EAAA,gBAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,WAAA,QAAA,CAAA,WAAA,EAAA,cAAA,EAAA,KAAA,YAAA;AACA;AATA;AAnBA,CAAA","sourcesContent":["<template>\n  <input type=\"text\"\n         :value=\"currentValue\"\n         @input=\"handleInput\"\n         @blur=\"handleBlur\"/>\n</template>\n<script>\n  import Emitter from \"../mixins/emitter\";\n\n  export default {\n    name: \"vInput\",\n    mixins: [ Emitter ],\n    props: {\n      value: {\n        type: String,\n        default: ''\n      }\n    },\n    data() {\n      return {\n        currentValue: this.value\n      }\n    },\n    watch: {\n      value(val) {\n        this.currentValue = val;\n      }\n    },\n    methods: {\n      handleInput(event) {\n        const value = event.target.value;\n        this.currentValue = value;\n        this.$emit(\"input\", value);\n        this.dispatch(\"iFormItem\", \"on-form-change\", value);\n      },\n      handleBlur() {\n        this.dispatch(\"iFormItem\", \"on-form-blur\", this.currentValue);\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}